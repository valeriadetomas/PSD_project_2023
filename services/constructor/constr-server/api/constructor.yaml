openapi: '3.0.2'
info:
  title: API Constructors for HRC #synchronized
  version: '1.0'
servers:
  - url: http://localhost:8080/
tags:
  - name: Constructors  
paths:
  /quotation_request:
    post: #synchronized request for quotation
      tags: 
        - quotation
      summary: Add new quotation request
      description: This allows to add a new quotation request
      operationId: requestQuotation
      requestBody: 
        description: Detail of the quotation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationRequest'
      responses:
        '200':
          description: OK, successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quotation'
        '404':
          description: Invalid
  
  /quotation:
    post: 
      summary: Add a new quotation 
      description: This allows to add a new quotation 
      operationId: requestQuotation
      requestBody: 
        description: Detail of the quotation posted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quotation'
      responses:
        '200':
          description: OK, successful
        '404':
          description: Invalid

  /result:
    post:
      tags: 
        - result
      summary: Result of quotation
      description: This allows to see the result of the request, if a worker has been chosen or not
      operationId: resultQuotation
      requestBody: 
        description: Detail of the result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Result'
      responses:
        '200':
          description: OK
        '404':
          description: Invalid

  /result/{id}:
    get:
      summary: Find a result by its ID
      description: It returns a single result
      operationId: getResultById
      parameters:
        - name: resultID
          in: path
          description: ID of result to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid ID supplied
        '404':
          description: Result not found
      
  /report:
    post: 
      summary: Report of the work
      description: Report of the work
      operationId: postReport
      requestBody: 
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      responses:
        '200':
          description: OK created
        '404':
          description: Invalid

    get:
      summary: Get all the reports
      description: It returns all the reports
      operationId: getReport
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '404':
          description: Report not found
    put:
      summary: Modify report
      description: It allows to modify the status of the report
      operationId: putReport
      requestBody: 
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      responses:
        '200':
          description: OK modified
        '404':
          description: Invalid
        
  /report/{id}:   
    get:
      summary: Find a report by its ID
      description: It returns a single report
      operationId: getReportById
      parameters:
        - name: reportID
          in: path
          description: ID of report to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '404':
          description: Result not found
        
components:
  schemas:
    Quotation:
      type: object
      properties:
        id: 
          type: integer
          example: 1
        constructor:
          type: string
          description: Name of the constructor making the quotation
        quotationPrice:
          type: number
          description: Price quoted for the constructor work
      required:
        - constructor
        - quotationPrice

    QuotationRequest:
      type: object
      properties:
        requester:
          type: string
          description: Name of the company making the request
        description:
          type: string
          description: Description of the work needed
        budget:
          type: number
          description: Budget for the plumber work
      required:
        - requester
        - description
    Result:
      type: object
      properties:
        message:
          type: string
        id:
          type: integer
          example: 1
    Report:
      type: object
      properties:
        id_request:
            type: integer
            format: int64
            example: 1
        status:
          type: string
          enum: 
            - not started
            - in progress
            - completed
          example: completed
        complete:
          type: boolean