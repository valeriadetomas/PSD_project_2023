openapi: '3.0.2'
info:
  title: Electrician API 
  version: '1.0'
paths:

# external
  /quotationRequest:
    post: # asynch communication
      tags: 
      - external
      operationId: requestQuotation
      requestBody:
        description: Request a quotation for a renovation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationRequest'
        required: false
      responses:
        "200":
            description: "Request created"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                    message:
                      type: string      
        '405':
            description: "Invalid Input"

# external
  /reportRequest:
    post: # asynch communication
      tags: 
      - external
      operationId: requestReport
      requestBody:
        description: Request for report
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: false
      responses:
        "200":
            description: "Request created"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    comment:
                      type: string  
        '405':
            description: "Invalid Input"            

# external
  /quotationRequest/{id}:        
    get:
      tags: 
      - external
      description: Get the quotation of the Electrician
      operationId: getQuotation
      parameters:
      - name: id
        in: path
        description: Quotation requester identifier
        required: true
        schema: 
          type: string
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Quotation'
        '202':
          description: "Request received"
        '404': 
          description: "Quotation request not found"

# external
  /confirmation:
    post: 
      tags: 
      - external
      description: Send job starting confirmation to the company
      operationId: sendConfirmation

      responses:
        "200":
            description: "Job started"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer # id of the job report
                    message:
                      type: string      
        '405':
            description: "Invalid Input"

      requestBody:
        description: Confirm the job assignment
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Confirmation"
    
  #external
  /refuse:
      post:
        tags:
        - external
        description: Inform the service that was not chosen by the HRC
        operationId: sendConfirmation

        requestBody:
          description: Refuse the job assignment
          required: true
          content:
            application/json:
              schema:
                  type: string

        responses:
            '200':
              description: OK
            '405':
              description: "Invalid Input"
        
  # external
  /report/{id}:
    get:
      tags: 
      - external
      description: Get the job report
      operationId: getJob
      parameters:
      - name: id
        in: path
        description: job identifier
        required: true
        schema: 
          type: integer
          format: int64
        
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '202':
          description: "Job report not created yet"
        '404': 
          description: "Job not found"
  
  # internal
  /report:
    post:
      tags:
        - internal
      description: Post job report
      operationId: postJob

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Report"
      
      responses:
        '200':
          description: OK
        '405':
          description: "Invalid Input"

 # internal 
  /quotation:
    post:
      tags:
        - internal
      operationId: postQuotation
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quotation'
        required: true

      responses:
        '200':
          description: OK
        '405':
          description: "Invalid Input"


components:
  schemas:
    Quotation:
      type: object
      properties:
        id: 
          type: integer
          example: 1
        electrician:
          type: string
          description: Name of the Electrician making the quotation
        quotationPrice:
          type: number
          description: Price quoted for the plumber work
      required:
        - electrician
        - quotationPrice

    QuotationRequest:
      type: object
      properties:
        requester:
          type: string
          description: Name of the company making the request
        description:
          type: string
          description: Description of the work needed
        budget:
          type: number
          description: Budget for the plumber work
      required:
        - requester
        - description

    ReportRequest:
      type: object
      properties:
        id:
          type: number
          description: ID of the report
    
    Confirmation:
      type: object  
      properties:
        comment: 
          type: string
          description: Outcome of the selection of the workers
    
    Report:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - not started
            - in progress
            - completed
        complete:
          type: boolean